html 코드

<!DOCTYPE html>
<html lang="ko"> /*한국어 언어 코드*/
<head>
  <meta charset="UTF-8">/*meta 태크의 charset 속성으로 인코딩 방식을 지정하여 브라우저상 인코딩 방식 통일으로 html 파일 글씨 깨짐 방지*/
  <title>나만의 북마크</title>
  <style>
    body {
      font-family: "Noto Sans", sans-serif; /*노토산스 웹폰트 홈페이지 적용하기*/
      background-color: #f9f9f9; /*배경 흰색 지정*/
      text-align: center;
      margin: 0;
      padding: 20px;
    }
    h1 {
      color: #333;
    }
    .container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
    } /*CSS를 이용하여 .container 클래스 요소에 flexbox 레이아웃 적용*/
    .box {
      background-color: #fff;
      border: 1px solid #ccc;
      border-radius: 12px;
      padding: 15px;
      margin: 10px;
      width: 300px;
      box-shadow: 2px 2px 6px rgba(0,0,0,0.1);
    } /*CSS를 이용하여 북마크 박스 띄우기 및 상세 설정*/
    .box input[type="text"] {
      width: 90%;
      padding: 5px;
      margin-bottom: 10px;
      border-radius: 6px;
      border: 1px solid #ccc;
    } /*박스 안의 텍스트 입력창 상세 설정*/
    .link {
      margin: 5px 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
    } /*링크 클래스의 가로 요소 정렬 설정*/
    .link a {
      color: #007BFF;
      text-decoration: none;
    } /*링크 클래스의 하이퍼링크 글자색 지정 및 밑줄 없애기*/
    .link button {
      background: none;
      border: none;
      color: red;
      cursor: pointer;
      font-size: 16px;
    } /*링크 클래스의 버튼 상세 설정 지정*/
    .add-btn, .new-box-btn {
      margin-top: 10px;
      padding: 6px 12px;
      border-radius: 6px;
      border: none;
      background-color: #007BFF;
      color: white;
      cursor: pointer;
    } /*링크 추가, 새 박스 추가 버튼 클래스의 상세 설정 지정*/
  </style>
</head>
<body>

  <h1>나만의 북마크</h1>
  <div class="container" id="container"></div>
  <button class="new-box-btn" onclick="addBox()">+ 박스 추가</button>

  <script>
    let data = JSON.parse(localStorage.getItem('bookmarks')) || []; /*data를 모든 박스와 링크를 저장하는 자바스크립트 배열로 지정하여, 로컬저장소에 저장된 북마크 데이터를 불러오고 없다면 빈 배열로 시작하도록 함*/

    function saveData() {
      localStorage.setItem('bookmarks', JSON.stringify(data));
    } /*데이터를 브라우저에 저장함으로써 새로고침해도 북마크 내 데이터가 사라지지 않게 하는 함수 생성*/

    function render() {
      const container = document.getElementById('container'); /*컨테이너 변수를 상수로 지정*/
      container.innerHTML = '';
      data.forEach((box, boxIndex) => {
        const boxDiv = document.createElement('div'); /*boxDiv 변수를 상수로 지정*/
        boxDiv.className = 'box';

        const titleInput = document.createElement('input');
        titleInput.type = 'text';
        titleInput.value = box.category;
        titleInput.oninput = function () {
          data[boxIndex].category = this.value;
          saveData();
        }; /*화면에 북마크를 띄우기 위한 함수*/

        const linksDiv = document.createElement('div');
        linksDiv.className = 'links';
        box.links.forEach((link, linkIndex) => {
          const linkDiv = document.createElement('div');
          linkDiv.className = 'link';
          linkDiv.innerHTML = `
            <a href="${link.url}" target="_blank">${link.title}</a>
            <button onclick="deleteLink(${boxIndex}, ${linkIndex})">❌</button>
          `;
          linksDiv.appendChild(linkDiv);
        });

        const titleInputField = document.createElement('input');
        titleInputField.placeholder = '링크 제목';

        const urlInputField = document.createElement('input');
        urlInputField.placeholder = '링크 주소';

        const addBtn = document.createElement('button');
        addBtn.className = 'add-btn';
        addBtn.textContent = '+ 링크 추가';
        addBtn.onclick = function () {
          const title = titleInputField.value.trim();
          const url = urlInputField.value.trim();
          if (title && url) {
            data[boxIndex].links.push({ title, url });
            titleInputField.value = '';
            urlInputField.value = '';
            saveData();
            render();
          }
        };

        boxDiv.appendChild(titleInput);
        boxDiv.appendChild(linksDiv);
        boxDiv.appendChild(titleInputField);
        boxDiv.appendChild(urlInputField);
        boxDiv.appendChild(addBtn);
        container.appendChild(boxDiv);
      });
    }

    function deleteLink(boxIndex, linkIndex) {
      data[boxIndex].links.splice(linkIndex, 1);
      saveData();
      render();
    } /*링크 제거 함수 생성*/

    function addBox() {
      data.push({ category: '새 카테고리', links: [] });
      saveData();
      render();
    } /*박스 추가 함수 생성*/

    render(); /*처음 페이지 실행시 자동으로 render함수 부르기*/
  </script>

</body>
</html>